//!هذا درس من دورة فلاتر ل حسن فليح بعنوان Bottom Navigation Bar
//!هذا الملف هو نفسه ممكن ان نعتبره ملف الماين اذا اردنا تنفيذ هذا التطبيق
//!نعدل فقط اسم الملف ونسميه main

import 'package:flutter/material.dart';

//!الان في هذا الدرس نريد ان يكون عندنا تاب بار لكن في البوتوم في اسفل الصفحة
//اي انه نريد ان يكون عندنا تاب بار في الاسفل منفصل تمام عن الاب بار العلوي
//بعض الاكواد نفسها من الدرس السابق مثل اكواد العنصرين الاسكافولد التي اضفناهم
// الى لستة التشيلدرن حق التاب بار فيو الان هنا سوف نعيد استخدامهم
// الصفحتين الاسكافولد وذلك لانه نريد نفس الشي من البوتوم نافقيشن بار
// وهو ان يعرض لنا صفحتين مختلفتين في كل تبويب نضغط عليه لذلك سوف ننسخ
// هذي الاكواد ونضعها بداخل الكلاس وخارج الدالة بيلد بداخل لستة سوف ننشأها
// لكي تحفظ لنا هذي الاكواد لحين استخدامها فيما بعد في تطبيقنا هذا
//وضعناهم في متغير عبارة عن لستة اوف ويدجت بما انهم عنصرين ويدجت اسمها pages
// List<Widget> pages = [];
//الان سوف نجعل البودي قيمته مبدئيا نجعلها نل حق السكافولد
// الذي فيه التاب بار فيو من البرنامج السابق
//الان نبقي على نفس الاكواد المتبقية من البرنامج السابق لانها سوف نستخدمها نفسها بدون تغيير
//مثل الارجاع يكون قبل السكافولد الرئيسي هو return DefaultTabController(
//اللنقث هو 2 الان نضيف الباراميتر بوتوم نافقيشن بار تابع للسكافولد الرئيسي
//ونضيف له اللستة ايتمس والذي نضيف له العناصر التي نريدها
//في التاب بار السابق كنا نضع العناصر في لستة التابس اسم العنصر تاب لكن هنا اسم العنصر
// BottomNavigationBarItem(icon: icon)
//!البوتوم نافقيشن بار يتم عمل كل شي فيه بشكل يدوي
//فنحن الان عملنا عنصرين وقسم البار السفلي الى جزئين لكن يجب ان اربط هذي العنصرين
// بالصفحتين الاسكافولد التي وضعتهم في اللسة التي انشأناها
//اي انه اريد عن الضغط على احد العناصر يقوم بعرض ويدجت معينه
// وهنا اريده يعرض صفحة الاسكافولد من اللستة بيجس اذا المفروض انه اضيف الخيار
//onTap:
//وهو من خصائص البوتوم نافقيشن بار
//مثلا سوف اجعله عند الضغط ينفذ دالة معينة سميناها x1
//الان سوف نعرف الدالة اكس ون داخل الكلاس
//!يجب ان نعلم انه اي دالة نعرفها في الباراميتر اون تاب هنا
//! يجب ان تستقبل باراميتر نوعه انتجر
//!وذلك لان خاصية اون تاب هنا مبرمجة تلقائيا على تنفيذ دالة معينة
//! ويمرر لها رقم العنصر نوعه انتجر
//اذا القيمة التي سوف يرسلها اون تاب للدالة سوف نخزنها في متغير اسمه اندكس
//void x1(int index){}
//الان بداخل الدالة سوف نحتاج الى دالة ست استيت وهذا يعني انه يجب ان يكون الكلاس
// الذي نعمل عليه يرث من استيت فل ويدجت وهنا كلاسنا يرث من استيت لس ويدجت
// لذلك يجب ان نغيرة لكي يرث من استيت فل عن طريق وضع مؤشر الماوس على
// كلمة الكلاس استيت لس ويدجت ونضغط على الهنت السراج ونختار convert to statefulWidget
//فانه يقوم تلقائيا بعمل اوفر رايد وكل مايلزم لتحويل الكلاس الى ان يرث من استيت فل ويدجت
//الان نقوم بتعريف متغير خارج الدالة لكي نستخدمه داخل الدالة ونسند له
// قيمة الاندكس الانتجر التي نحصل عليها من اون تاب int selectedPageIndex = 0;
//الان لنفترض اننا شغلنا البرنامج وضغطنا على العنصر الاول فان الاون تاب سوف يرسل
// للدالة اكس ون قيمة صفر وهي قيمة اندكس العنصر الاول سوف تستقبلها الدالة
// اكس ون في المتغير اندكس وسوف تعطي هذي القيمة للمتغير سلكت بيج اندكس
//الان راح تصير قيمة المتغير سلكت بيج اندكس هي قيمة اندكس العنصر الذي تم الضغط عليه
//الان نرجع الى البودي الذي مسحنا محتوياته في بداية الدرس واعطيناه قيمة نل
//نضع فيه اللستة بيجس التي بداخلها صفحتين اسكافولد سوف يعطينا خطا
// لان البودي يستقبل ويدجت وليس لسته اوف ويدجت لذلك سوف نعطيه
// اندكس واحدة من الصفحات اي سوف نعطية احد الويدجت الاسكافولد
//ممكن نكتب هكذا سوف يقبلها body:Pages[0] او body:Pages[1]
//لكننا اصلا عملنا متغير واعطيناه اندكس الصفحة التي نضغط عليها لذلك نمرره مكان الاندكس
// body: pages[selectedPageIndex],
//الان لو عملنا هوت ريلود اذا ضغطنا على بارت1 سوف يحمل لنا الصفحة الاولى
// من اللستة بيجس وكذلك عند الضغط على بارت2 سوف يعرض الصفحة الثانية
//الان سوف نضع بعض الخصائص لهذا البوتوم نافقيشن بار
//نلاحظ انه عند الضغط على ايقونة بارت 2 فانها تبقى بدون لون
// والمفروض انه عند الضغط على اي ايقونة يصير لها لون والاخرى بلا لون
//لكن هنا الايقونة الاولى فقط يبقى فيها اللون والثانية تبقى في جميع الاحوال بدون لون
//الان هو لايعلم اي ايقونة ضغطنا عليها لذلك يجب ان نعلمه اننا ضغطنا هذي لكي يحول لونها
//وهذا عن طريق الخاصية currentIndex:
//ونعطيها قيمة الاندكس الحالي ونحصل عليه من المتغير سلكتد بيجس اندكس
// currentIndex:selectedPageIndex,
//الان كل شي يعمل بشكل صحيح لكن حبينا ان نستكمل شرح قيمة الخصائص
//الان سوف نستكمل بقية الخصائص في ملف
// 37.BottomNavigationBar_2
//لاننا سوف نغير الكثير من الاكواد
//
//
//

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      //title: 'Flutter App',
      theme: ThemeData(primaryColor: Colors.blue),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  //!هذي لستة اوف ويدجت وضعهنا فيها عنصرين اسكافولد يعني صفحتين
  List<Widget> pages = [
    Scaffold(
      appBar: AppBar(title: Text('Part 1')),
      body: const Center(child: Text('Text 1')),
    ),
    Scaffold(
      body: Center(child: Text('Text 2')),
    )
  ];

  int selectedPageIndex = 0;
  void x1(int index) {
    setState(() {
      selectedPageIndex = index;
    });
  }

  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
      length: 2,
      child: Scaffold(
        appBar: AppBar(
          //backgroundColor: Colors.orange,
          title:
              const Text('Main Screen', style: TextStyle(color: Colors.black)),
        ),
        body: pages[selectedPageIndex],
        bottomNavigationBar: BottomNavigationBar(
          backgroundColor: Colors.pinkAccent,
          selectedItemColor: Colors.black, //لون العنصر الذي ضغطنا عليه
          unselectedItemColor: Colors.white, //لون العنصر الذي لم نضغطه
          currentIndex: selectedPageIndex, //يمثل الاندكس الذي ضغطنا عليه حاليا
          selectedFontSize: 20, //حجم خط العنصر الذي ضغطنا عليه
          unselectedFontSize: 15, //حجم خط العنصر الذي لم نضغط عليه
          //الحالة الافتراضية فان حجم الخط متساوي
          items: const [
            BottomNavigationBarItem(
              icon: Icon(Icons.category),
              title: Text('Part 1'),
            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.star),
              title: Text('Part 2'),
            )
          ],
          onTap: x1,
        ),
      ),
    );
  }
}
