//!هذا درس من دورة فلاتر ل حسن فليح بعنوان StatefulWidget
//!الان في جميع الدروس القادمة سوف نجعل ملف خاص للدالة main
//!نستدعي بداخلها الدالة رن اب ثم سوف نمرر بداخل هذي الدالة اي درس نشرحه

import 'package:flutter/material.dart';

//احيانا في كثير من التطبيقات نحتاج الى كلاس مع الاستيت اي مع الحالة
//هنا سوف ننشئ كلاس جديد ونجعله يرث من كلاس استيت فل ويدجت LessonTwo
//وسوف نقوم بعمل اوفر رايد للدالة كرييت استيت
//المفروض انه يكون عندنا كلاسين واحد يسيطر على الويدجت والثاني يسيطر على الاستيت
//بالتالي سوف ننشى كلاس ثاني وبالعادة يتم تسميته بنفس اسم الكلاس الاول مع اضافة
//كلمة استيت LessonTwoState
//الكلاس الثاني كما قلنا ان وضيفته هي ان يسيطر او يحوي الاستيت
//الكلاس الثاني اللي هو كلاس الاستيت يجب ان نجعله يرث من كلاس اسمه استيت
//الكلاس استيت هو عبارة عن جينريك
//abstract class State<T extends StatefulWidget> with Diagnosticable
//اي ان نوعه هو تي ويعني على حسب النوع اللي ننشئة نحن وهذا التي يرث من استيت فل ويدجت
//اذا من يحقق هذا الشرط
//يحقق هذا الشرط الكلاس ليسن تو اللي عملناه اول حاجة اذا يكون هو نوع هذا الكلاس
//حتى يتم ربط الكلاسين معا
// class LessonTwoState extends State<LessonTwo>
//الان في الكلاس الثاني نقوم بعمل اوفر رايد للدالة بيلد كما في الدروس السابقة
//نعود الى الكلاس الاول والدالة كرييت استيت من الافضل اننا نكتبها بتعبير لمدا فات ارو
//الان سوف نقوم بتنفيذ هذي الدالة كرييت استيت وهي فقط تعمل ريتيرن للكلاس الثاني
//عندما ترجع الكلاس اكيد لانكتب اسم الكلاس فقط وانما اسم الكلاس مع اقواس الكونستركتر
//لكي ننشى منه اوبجكت State<StatefulWidget> createState() => LessonTwoState();
//في العادة نجعل اسم الكلاس الثاني برايفت حتى لايتم استدعائه من خارج الملف
// _LessonTwoState
//هذي هي الهيكلية الخاصة بالكلاس استيت فل ويدجت

//!بناء التطبيق سوف يكون كله في الكلاس الثاني بنفس طريقة الدروس السابقة
//!ملاحظة مهمة جدا وهي اننا عدلنا في الملف main
//!الذي يوجد به الدالة ماين واضفنا له كلاس ماي اب وبداخل هذا الكلاس نستدعي
//!كلاسات الدروس الاخرى مثل كلاس هذا الدرس وغيره لكن التعديل هو اننا كتبنا
//!في الكلاس ماي اب الويدجت ماتيريال اب واستدعينا الكلاسات الاخرى في الهوم
//!بالتالي في الكلاسات الاخرى خلاص لا نكتب في ارجاع الدالة بيلد الماتيريال اب
//!لانه كتبناه في كلاس ماي اب في ملف الدالة ماين وهنا نكتفي بارجاع الاسكافولد
//!يعني اننا اذا اردنا تنفيذ الدروس السابقة في ملف الدالة ماين يجب علينا
//!مسح الماتيريال اب من كلاسات ونجعل الدالة بيلد ترجع الاسكافولد

//الان سوف ننشى متغير سي داخل الكلاس وخارج الدالة بيلد ونعطيه قيمة وهي اللون البرتقالي
// var c = Colors.orange;
//فاذا مثلا اردنا مثلا ايكون الاب بار لونه برتقالي
//فاننا سوف نضع قيمة الباك قراوند كولور هي المتغير سي وبالتالي اختصرنا الكود
// backgroundColor: c,
//ثم مثلا اردنا انه عندما نضغط على زر الفلوتين اكشن بوتن
//نريده ان يغير لون الاب بار عند الضغط بالتالي سوف نغير قيمة المتغير سي فقط
//لانه اذا غيرنا قيمة المتغير سي فان القيمة ايضا سوف تتغير
//في الباك قراوند كولور حق الاب بار
//السي هو متغير نوعه فار وليس فينال ولا كونستانت بالتالي ممكن اننا نغير قيمته
//سوف نغير قيمته عند الضغط الى لون اخر onPressed: () {c = Colors.teal;},
//نلاحظ انه اذا شغلناالبرنامج فانه عند الضغط على الزر
// المفروض ان لون الاب بار يتغير الى لون اخر غير البرتقالي لكن لايحدث شي
//اللي صار انه تغير اللون عند ضغط الزر لكن لم يحدثه بشكل مباشر لكي يظهر لنا
//لكن لو ضغطنا على هوت ريلود من جديد سوف يحدث التطبيق ونرى تغيير اللون
//!هذا يعني ان هذا المتغير السي صار عندنا هو الاستيت state
//!هذا المتغير عن طريقه ممكن اننا اعمل اعادة بناء للويدجت
//!هو صحيح اننا عندما ضغطنا الزر غير قيمة المتغير سي
//!ولكن انا اريد اعادة بناء الاب بار بلون جديد
//!اي اننا اريد اعمل اعادة بناء لهذي الويدجت فقط
//!بالتالي فان هذي الخاصية غير موجودة في الاستيت لس ويدجت لانها لاتحتوي على الاستيت
//!وبالتالي لاتعمل اعادة بناء للويدجت بالتالي فان الخطوة الاولى حتى نهيئ لهذا الشي
//!وهو اعادة بناء الويدجت هو اننا نعمل على استيت فل ويدجت
//!وحاليا نحن فعلا نعمل على استيت فل ويدجت بسبب الاجراءات التي عملناها
//!في بداية هذا الدرس وجعلنا هذا الكلاس يرث اسيت
//!ثم نستعمل دالة متعلقة بالاستيت فل ويدجت واسمها ست استيت يعني انشاء الحالة
//! setState((){});
//!الان عندنا الحالة هي تغيير قيمة المتغير سي اي عمل اعادة بناء الاب بار بلون جديد
//!وحتى يفهم الكومبايلر اننا نريد عمل اعادة بناء يجب ان نستخدم الدالة ست استيت
//!وهي دالة هاير وردر فنكشن لانها تقبل دالة ك باراميتر بداخلها
//!setState(() {c = Colors.teal;});
//!نلاحظ الان انه بمجرد اننا نضغط على الزر سوف يتحول لون الاب بار الى لون مختلف
//!لانه فهم ان هذا استيت وبالتالي فان قيمة المتغير سي سوف يتم اعادة بنائها
//!فقط المتغير سي لاننا فهمناه عن طريق الدالة ست استيت
//! ان هذا هو الاستيت بالتالي سوف يعيد بناءه فقط
//!بدون ان يعيد بناء بقية الاجزاء الثابتة الاخرى في البرنامج
//!فهو يذهب الى جميع اجزاء البرنامج التي فيها المتغير سي ويعيد بنائها
//!اي انه فقط يعيد بناء الجزء المطلوب فقط

class LessonTwo extends StatefulWidget {
  const LessonTwo({Key? key}) : super(key: key);
  //هذا في النسخ الحديثة يطلبه الكي المفتاح سوف يتم شرحه في دروس لاحقه

  @override
  State<StatefulWidget> createState() => _LessonTwoState();
  //ممكن نكتبها بطريقة البلوك العادي
  /*
  State<StatefulWidget> createState(){
    return LessonTwoState();
  } 
  */

}

class _LessonTwoState extends State<LessonTwo> {
  var c = Colors.orange;
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: c,
      ),
      body: null,
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          setState(() {
            c = Colors.teal;
          });
          ;
        },
        child: const Icon(Icons.add),
      ),
    );
  }
}
