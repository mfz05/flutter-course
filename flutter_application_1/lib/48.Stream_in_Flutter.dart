//!هذا درس من دورة فلاتر ل حسن فليح بعنوان Stream in Flutter
//!هذا الملف هو نفسه ممكن ان نعتبره ملف الماين اذا اردنا تنفيذ هذا التطبيق
//!نعدل فقط اسم الملف ونسميه main

//في هذا الدرس سوف نتعلم كيفية استخدام الستريم في فلاتر
//!اولا ارجع الى درس ستريم في دروس لغة دارت او الملخص الذي كتيته لهذا الدرس
//ثم بعد ذلك ارجع الى هذا الدرس
//في الدالة ماين عملنا استريم بريوديك وخزناه في متغير ماي ستريم
//عملنا ثلاثة متغيرات الاول وهو الاوبجكت ماي تريم لكي يخزن الاستريم
//الثاني ماي استريم2 لكي نضع شرط للاستريم ماي استريم ونخزن الناتج في ماي ستريم2
//المتغير الثالث هو سب لكي يخزن ناتج الدالة لسن على الاوبجكت ماي ستريم2
//هذا كله درسناه في درس ستريم في دروس لغة دارت
//
//الان لو اردنا استخدام الستريم بشكل عملي داخل فلاتر فاننا نستخدم الستريم بيلدر
//اي اننا في الدالة بيلد بدل ان نقوم بارجاع ماتيريال اب او اسكافولد فاننا سوف
//نقوم بارجاع ستريم بيلدر return StreamBuilder(
//هذا الستريم بيلدر يوجد بداخله باراميترين هما الستريم والبيلدر
//الستريم نمرر له ستريم كامل مثلا
// stream: Stream.periodic(Duration(seconds: 2),(a)=>a),
//اما البيلدر فاننا نمرر له دالة تستقبل 2 باراميترات الاول هو الكونتكست
//! خذها بشكل عام اي دالة بيلدر يجب ان يكون لديها باراميتر كونتكست
//والباراميتر الثاني سوف نسميه سناب شوت ممكن نسميه اي اسم
//هذا السناب شوت يعمل عمل المتغير المرجعي الذي نسند له اوبجكت الستريم كما في درات
//مثلا الاكواد حق الستريم التي كتبناها في بداية الدرس في الدالة ماين عملنا
//متغير مرجعي هو ماي ستريم واسندنا له اوبجكت عبارة عن ستريم كامل
//الان هنا يمثل الباراميتر سناب شوت كانه المتغير المرجعي للستريم اي كانه
// ماي ستريم ونستطيع استدعاء الستريم فيما بعد من خلاله
//الان بما اننا عملنا ستريم بيلدر الذي يحتوي على باراميترين واعطينا الباراميتر الاول
//ستريم كامل والباراميتر الثاني هو بيلدر وله 2 باراميترات اذا بما انه بيلدر
//وارجاع البيلدر هي ويدجت اذا في البودي حق الدالة التي مررناها للبيلدر
//سوف نقوم بارجاع الويدجت اسكافولد ونبدا عمل التطبيق كله من هنا
/*
return StreamBuilder(
      stream: Stream.periodic(Duration(seconds: 2),(a)=>a),
      builder: (ctx, snapShot) {
        return Scaffold(
      }
      );
*/
//
//
//
//
//
//الان بعدما وضعنا الستريم في الباراميتر ستريم
//طيب الان نريد ان نستفيد من القيمة الراجعة
//اي بعدما يكتمل الستريم اريد ان اعالج القيمة او التقط الخطأ اذا انتهى بخطأ
//الان بما انه الباراميتر سناب شوت يعمل عمل المتغير المرجعي للستريم اذا
//فان القيمة الراجعة من الستريم سوف تتخزن فيه وبالتالي استطيع معالجتها او
//التقاط الخطأ اذا اكتملت بخطأ وذلك عن طريق دوال اخرى مثل اننا كنا نستخدم
//في دارت الدالة ليسن واون ايرور هنا سوف نستخدم دوال اخرى تقوم بنفس عملها
//الان نريد عرض القيمة الراجعة من الستريم في التايتل حق الاب بار
//فاننا نستخدم السناب شوت ونتاكد من القيمة الراجعة المخزنة فيه هل فيه قيمة
//او فيه خطا نستخدم الدالة هاز داتا للتحقق اذا فيه قيمة مخزنة في السناب شوت
// hasData , hasError
//الدالة هاز ايرور اذا فية خطأ مخزن وكلاهما ترجعان اما ترو او فولس
//بالتالي نقدر نضعهم في اف شرطية لكي نتحقق
// appBar: AppBar(title: Text(snapShot.hasData? '${snapShot.data}' : 'Demo !'),),
//هذا يعني هل السناب شوت فيه داتا اذا نعم اعطيني قيمة الداتا واذا لا اطبع كلمة ديمو
//برضه بنفس الشئ يمكن ان نتحقق هل السناب شوت فيه ايرور ثم يطبع رسالة الخطا كالتالي
// appBar: AppBar(title: Text(snapShot.hasError ? '${snapShot.error}' : 'Demo !'),),
//ممكن ان نضع شرطين لكي نجعل الستريم يتوقف عند شرط معين
//title: Text((snapShot.hasData && snapShot.data == 10)? '${snapShot.data}': 'Demo !')),
//ستريم بيريوديك والديوريشن 2 ثانية اي انه كل 2 ثانية سوف يعطينا رقم
//هذا يعني ان التطبيق في البداية سوف يجد انه لاتوجد داتا في السناب شوت قبل ان
//تكتمل الثانيتين بالتالي في البداية سوف يطبع كلمة ديمو ثم بعد ثانيتين سوف يطبع
//الداتا المخزنة في السناب شوت
//ممكن اثناء انتظار القيمة من الستريم ان نضيف لودينق انميشن يدور في وسط الكونتينر
//الدالة التي تعمل هذي الدائرة حق التحميل هي سيركولار بروقرس اندكيتر
// CircularProgressIndicator(),
//الان اريد ان اربط هذي دالة مع الستريم ويكون ذلك عن طريق السناب شوت
//نضيف الى البودي ويدجت سنتر ثم تشايلد ثم نمرر له السناب شوب
//نقوم بالتحقق من حالة اتصال الستريم الذي في السناب شوت هل هي انتهت
//او في حالة انتظار ام فعالة يوجد عندنا عدة حالات وطبعا نختار منها ويتينق انتظار
//لان نحنا الان ننتظر الارجاع من الستريم بالتالي في حالة الانتظار سوف نربطه
//بالدالة سيركولار بروقرس اندكيتر لكي تعرض لنا في وسط الكونتينر دائرة اللودينق
/*
body: Center(
              child: snapShot.connectionState == ConnectionState.waiting
                  ? CircularProgressIndicator()
                  : Text('Done !'),
            )
*/
//هذا معناه هل حالة السناب شوت تساوي ويتينق اذا نعم استدعي الدالة سيركولار
//واعرض لي دائرة اللودينق في وسط الكونتينر واذا لا اي اذا انتهت حالة الويتينق
//اطبع في وسط الكونتينر كلمة دن
//
//وبهذي الطريقة نتعامل مع القيمة الراجعة من الستريم عن طريق السناب شوت
//
//

import 'package:flutter/material.dart';

main() {
//هذا الستريم كما تعلمناه في لغة دارت
/*
هذي الاكواد لانحتاج لها واوردناها هنا
 لكي نستذكر كيف كنا نتعامل مع الفيوتشر في دارت

final myStream=Stream.periodic(Duration(seconds: 2),(a)=>a);
final myStream2=myStream.where((event) => event%2==1);
final sub = myStream2.listen((event) {print(event);});

sub.onData((data) {data>10? sub.cancel():print(data);});

*/

  runApp(MyApp());
}

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  @override
  Widget build(BuildContext context) {
    return StreamBuilder(
      stream: Stream.periodic(Duration(seconds: 2), (a) => a),
      builder: (ctx, snapShot) {
        return Scaffold(
            appBar: AppBar(
                //title: Text(snapShot.hasData ? '${snapShot.data}' : 'Demo !')),
                title: Text((snapShot.hasData && snapShot.data == 10)
                    ? '${snapShot.data}'
                    : 'Demo !')),
            body: Center(
              child: snapShot.connectionState == ConnectionState.waiting
                  ? CircularProgressIndicator()
                  : Text('Done !'),
            ));
      },
    );
  }
}
