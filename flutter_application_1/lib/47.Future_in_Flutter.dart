//!هذا درس من دورة فلاتر ل حسن فليح بعنوان Future in Flutter
//!هذا الملف هو نفسه ممكن ان نعتبره ملف الماين اذا اردنا تنفيذ هذا التطبيق
//!نعدل فقط اسم الملف ونسميه main

//في هذا الدرس سوف نتعلم كيفية استخدام الفيوتشر في فلاتر
//!اولا ارجع الى درس فيوتشر في دروس لغة دارت او الملخص الذي كتيته لهذا الدرس
//ثم بعد ذلك ارجع الى هذا الدرس
//في الدالة ماين عملنا فيوتشر ديلايد وخزناه في متغير ماي فيوتشر
// نوعه فيوتشر اوف انتجر واستدعينا دالة خارجية مكان دالة الكمبيوتيشن
// بين اقواس الديوريشن هذي الدالة تستقبل انتجر ومررنا لها العدد 2 ثم بعد ذلك
// استدعينا دالة ذن على المتغير ماي فيوتشر لكي تقوم بمعالجة القيمة الانتجر
//الراجعة من الفيوتشر وتطبعها واذا ارجع خطاء تلتقطه الدالة كاتش ايرور وتطبعه
//نلاحظ انه اذا نفذنا البرنامج فانه اولا سوف ينفذ دالة الطباعة
// التي اسفل الفيوتشر ويطبع العدد 1 ثم بعد ذلك ينتظر تنفيذ الفيوتشر
//هذا كله درسناه في درس الفيوتشر في دروس لغة دارت
//
//الان لو اردنا استخدام الفيوتشر بشكل عملي داخل فلاتر فاننا نستخدم الفيوتشر بيلدر
//اي اننا في الدالة بيلد بدل ان نقوم بارجاع ماتيريال اب او اسكافولد فاننا سوف
//نقوم بارجاع فيوتشر بيلدر return FutureBuilder(
//هذا الفيوتشر بيلدر يوجد بداخله باراميترين هما الفيوتشر والبيلدر
//الفيوتشر نمرر له فيوتشر كامل مثلا
// future: Future.delayed(Duration(seconds: 1),()=>info(2)),
//اما البيلدر فاننا نمرر له دالة تستقبل 2 باراميترات الاول هو الكونتكست
//! خذها بشكل عام اي دالة بيلدر يجب ان يكون لديها باراميتر كونتكست
//والباراميتر الثاني سوف نسميه سناب شوت ممكن نسميه اي اسم
//هذا السناب شوت يعمل عمل المتغير المرجعي الذي نسند له اوبجكت الفيوتشر كما في درات
//مثلا الاكواد حق الفيوتشر التي كتبناها في بداية الدرس في الدالة ماين عملنا
//متغير مرجعي هو ماي فيوتشر واسندنا له اوبجكت عبارة عن فيوتشر كامل
//الان هنا يمثل الباراميتر سناب شوت كانه المتغير المرجعي للفيوتشراي كانه
// ماي فيوتشر ونستطيع استدعاء الفيوتشر فيما بعد من خلاله
//الان بما اننا عملنا فيوتشر بيلدر الذي يحتوي على باراميترين واعطينا الباراميتر الاول
//فيوتشر كامل والباراميتر الثاني هو بيلدر وله 2 باراميترات اذا بما انه بيلدر
//وارجاع البيلدر هي ويدجت اذا في البودي حق الدالة التي مررناها للبيلدر
//سوف نقوم بارجاع الويدجت اسكافولد ونبدا عمل التطبيق كله من هنا
/*
return FutureBuilder(
      future: Future.delayed(Duration(seconds: 1),()=>info(2)),
      builder: (ctx,snapShot){
        return Scaffold()
      }
      );
*/
//الان بعدما وضعنا الفيوتشر في الباراميتر فيوتشر فانه يقوم بارسال الرقم 2 للدالة
//انفو والتي بدورها تقوم بارجاع هذي القيمة طيب الان نريد ان نستفيد من القيمة الراجعة
//اي بعدما يكتمل الفيوتشر اريد ان اعالج القيمة او التقط الخطأ اذا انتهى بخطأ
//الان بما انه الباراميتر سناب شوت يعمل عمل المتغير المرجعي للفيوتشر اذا
//فان القيمة الراجعة من الفيوتشر سوف تتخزن فيه وبالتالي استطيع معالجتها او
//التقاط الخطأ اذا اكتملت بخطأ وذلك عن طريق دوال اخرى مثل اننا كنا نستخدم
//في دارت الدالة ذن وكاتش ايرور هنا سوف نستخدم دوال اخرى تقوم بنفس عملها
//الان نريد عرض القيمة الراجعة من الفيوتشر في التايتل حق الاب بار
//فاننا نستخدم السناب شوت ونتاكد من القيمة الراجعة المخزنة فيه هل فيه قيمة
//او فيه خطا نستخدم الدالة هاز داتا للتحقق اذا فيه قيمة مخزنة في السناب شوت
// hasData , hasError
//الدالة هاز ايرور اذا فية خطأ مخزن وكلاهما ترجعان اما ترو او فولس
//بالتالي نقدر نضعهم في اف شرطية لكي نتحقق
// appBar: AppBar(title: Text(snapShot.hasData ? '${snapShot.data}' : 'Demo !'),),
//هذا يعني هل السناب شوت فيه داتا اذا نعم اعطيني قيمة الداتا واذا لا اطبع كلمة ديمو
//برضه بنفس الشئ يمكن ان نتحقق هل السناب شوت فيه ايرور ثم يطبع رسالة الخطا كالتالي
// appBar: AppBar(title: Text(snapShot.hasError ? '${snapShot.error}' : 'Demo !'),),
//يجب ان نعلم ان هذا فيوتشر يعني انه سوف يتاخر في جلب البيانات وبما انه هنا
//فيوتشر ديلايد والديوريشن 1 ثانية اي انه سوف يتاخر واحد ثانية ثم يعطين الداتا
//هذا يعني ان التطبيق في البداية سوف يجد انه لاتوجد داتا في السناب شوت قبل ان
//تكتمل الثانية بالتالي في البداية سوف يطبع كلمة ديمو ثم بعد ثانية سوف يطبع
//الداتا المخزنة في السناب شوت اي العدد 2 سوف يطبعه
//ممكن اثناء انتظار القيمة من الفيوتشر ان نضيف لودينق انميشن يدور في وسط الكونتينر
//الدالة التي تعمل هذي الدائرة حق التحميل هي سيركولار بروقرس اندكيتر
// CircularProgressIndicator(),
//الان اريد ان اربط هذي دالة مع الفيوتشر ويكون ذلك عن طريق السناب شوت
//نضيف الى البودي ويدجت سنتر ثم تشايلد ثم نمرر له السناب شوب
//نقوم بالتحقق من حالة اتصال الفيوتشر الذي في السناب شوت هل هي انتهت
//او في حالة انتظار ام فعالة يوجد عندنا عدة حالات وطبعا نختار منها ويتينق انتظار
//لان نحنا الان ننتظر الارجاع من الفيوتشر بالتالي في حالة الانتظار سوف نربطه
//بالدالة سيركولار بروقرس اندكيتر لكي تعرض لنا في وسط الكونتينر دائرة اللودينق
/*
body: Center(
              child: snapShot.connectionState == ConnectionState.waiting
                  ? CircularProgressIndicator()
                  : Text('Done !'),
            )
*/
//هذا معناه هل حالة السناب شوت تساوي ويتينق اذا نعم استدعي الدالة سيركولار
//واعرض لي دائرة اللودينق في وسط الكونتينر واذا لا اي اذا انتهت حالة الويتينق
//اطبع في وسط الكونتينر كلمة دن
//
//وبهذي الطريقة نتعامل مع القيمة الراجعة من الفيوتشر عن طريق السناب شوت
//
//

import 'package:flutter/material.dart';

main() {
//هذا الفيوتشر كما تعلمناه في لغة دارت
/*
هذي الاكواد لانحتاج لها واوردناها هنا
 لكي نستذكر كيف كنا نتعامل مع الفيوتشر في دارت

final Future<int> myFuture = Future.delayed(Duration(seconds: 1),()=>info(2));
myFuture.then((value) => print(value)).catchError((err)=>print(err));
print(1);

*/

  runApp(MyApp());
}

//هذي دالة عادية سوف نستدعيها في الفيوتشر اللي في الدالة ماين في الاعلى
int info(int a) {
  return a;
}

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  @override
  Widget build(BuildContext context) {
    return FutureBuilder(
      future: Future.delayed(Duration(seconds: 1), () => info(2)),
      builder: (ctx, snapShot) {
        return Scaffold(
            appBar: AppBar(
                title: Text(snapShot.hasData ? '${snapShot.data}' : 'Demo !')),
            //Text(snapShot.hasError ? '${snapShot.error}' : 'Demo !'),),
            body: Center(
              child: snapShot.connectionState == ConnectionState.waiting
                  ? CircularProgressIndicator()
                  : Text('Done !'),
            ));
      },
    );
  }
}
